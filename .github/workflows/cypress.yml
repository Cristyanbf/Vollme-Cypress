name: Cypress Tests

on: 
  push:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Checkout do servidor
        uses: actions/checkout@v4
        with:
          path: server

      - name: Iniciar Servidor BackEnd
        run: |
          cd server
          npm install
          npm start &  # Inicia o servidor em segundo plano
          until curl -s -o /dev/null -w "%{http_code}" http://localhost:8080 | grep -q "200"; do
            echo "Esperando o servidor iniciar..."
            sleep 1
          done
          echo "Servidor BackEnd está rodando com sucesso."
        working-directory: server

      - name: Iniciar Web App FrontEnd
        run: |
          cd web
          npm install
          npm start &  # Inicia o Frontend em segundo plano
        working-directory: web

      - name: Rodar testes do Cypress
        uses: cypress-io/github-action@v6
        with:
          wait-on: 'http://localhost:3000,http://localhost:8080'  # Aguarda o Frontend e o Backend estarem prontos
          spec: |
            cypress/e2e/cadastro-sucesso.cy.js
            cypress/e2e/login-clinica.cy.js
            cypress/e2e/dashboard.cy.js
          record: true
          parallel: true
          group: 'Cypress Tests'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CHAVE_DE_REGISTRO_CYPRESS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
